function coreg_check( ...
	out_path, ...
    meanfmri_file, ...
    seg_file ...
    )

% Make a nice at-a-glance image to check registration between structural
% and functional. Works great with the mean functional as the background
% and the gray matter segmented image as the overlay. Most consistent for
% checking if the MNI space versions are used.
%
% Dependencies:
%     canny  (http://www.mathworks.com/matlabcentral/fileexchange/45459-canny-edge-detection-in-2-d-and-3-d)
%
% Outputs:
%     edge image
%     png graphic

% Edge image filename
[p,n,e] = fileparts(seg_file);
edge_file = fullfile(p,['edge_' n e]);

% Load the anat image
Vover = spm_vol(seg_file);
[Yover,XYZ] = spm_read_vols(Vover);

% Create gray matter mask
regions = [ ...
	101 105 113 119 121 125 137 139 141 143 147 153 163 165 ...
	179 187 191 205 ...
	100 104 112 118 120 124 136 138 140 142 146 152 162 164 ...
	178 186 190 204 ...
	107 167 169 175 195 199 ...
	106 166 168 174 194 198 ...
	151 183 193 149 177 ...
	150 182 192 148 176 ...
	109 115 129 135 145 157 161 197 ...
	108 114 128 134 144 156 160 196 ...
	117 123 133 155 171 181 185 201 203 207 ...
	116 122 132 154 170 180 184 200 202 206 ...
	31 32 35 47 48 57 58 59 60 102 103 172 173 75 76 36 ...
	37 23 30 55 56 61 62 ...
	38 39 71 72 73 ...
	];
Yover(:) = ismember(Yover(:),regions);

% Compute the edge image and save
Yedge = canny(Yover);
Vedge = rmfield(Vover,'pinfo');
Vedge.fname = edge_file;
spm_write_vol(Vedge,Yedge);

% Show the functional image
spm_check_registration(meanfmri_file);

% Overlay the anat edge image
spm_orthviews('Xhairs','off');
spm_orthviews('addcolouredimage',1,edge_file,[1 0 0]);
title({'Image = mean fMRI','Red = T1 gray matter outline'})

% Move to center of mass (of gray matter image). We'll move over a bit in x
% to get away from the exact centerline
com = (XYZ * Yover(:) / sum(Yover(:)));
spm_orthviews('Reposition',com+[8 0 0]');

%title_line_1 = sprintf('Project %s ;  Subject %s ;', project, subject);
%title_line_2 = sprintf('Session %s ;  Scan %s', session, scan);
%title({title_line_1, title_line_2});

axis off

% Capture the graphical output
set(spm_figure('FindWin','Graphics'), ...
	'PaperOrientation','portrait', ...
	'PaperUnits','inches', ...
	'PaperSize',[8.5 11], ...
	'PaperType','usletter', ...
	'PaperPositionMode','auto' ...
	)
print( ...
	spm_figure('FindWin','Graphics'), ...
	'-dpng', ...
	'-r600', ...
	fullfile(out_path,'output3.png') ...
	);


